2020-11-28 16:00:34.063  INFO [org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21)] [background-preinit] Version - HV000001: Hibernate Validator 6.1.6.Final
2020-11-28 16:00:34.109  INFO [org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:55)] [main] Main - Starting Main using Java 11.0.7 on zeus-ubuntu with PID 17792 (/home/elavertu/Documents/Dev/Banshee/target/classes started by elavertu in /home/elavertu/Documents/Dev/Banshee)
2020-11-28 16:00:34.112  INFO [org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:660)] [main] Main - No active profile set, falling back to default profiles: default
2020-11-28 16:00:34.790  INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:128)] [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-28 16:00:34.804  INFO [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:188)] [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
2020-11-28 16:00:34.941  INFO [org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:350)] [main] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'persistenceConfig' of type [dev.lavertu.banshee.config.PersistenceConfig$$EnhancerBySpringCGLIB$$471e5650] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-28 16:00:35.290  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:108)] [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2020-11-28 16:00:35.398  INFO [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:289)] [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1231 ms
2020-11-28 16:00:35.522  INFO [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)] [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-28 16:00:35.565  INFO [org.hibernate.Version.logVersion(Version.java:44)] [main] Version - HHH000412: Hibernate ORM core version 5.4.23.Final
2020-11-28 16:00:35.651  INFO [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2020-11-28 16:00:35.673 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2cd4e16a
2020-11-28 16:00:35.673 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2cd4e16a
2020-11-28 16:00:35.673 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2cd4e16a
2020-11-28 16:00:35.674 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7316523a
2020-11-28 16:00:35.674 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b5ac798
2020-11-28 16:00:35.675 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1f1cddf3
2020-11-28 16:00:35.676 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@611640f0
2020-11-28 16:00:35.677 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@611640f0
2020-11-28 16:00:35.677 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@611640f0
2020-11-28 16:00:35.678 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1682c08c
2020-11-28 16:00:35.678 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1682c08c
2020-11-28 16:00:35.679 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1682c08c
2020-11-28 16:00:35.680 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7cac93fe
2020-11-28 16:00:35.681 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7cac93fe
2020-11-28 16:00:35.682 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7cac93fe
2020-11-28 16:00:35.683 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@72bdd7c7
2020-11-28 16:00:35.684 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@72bdd7c7
2020-11-28 16:00:35.684 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@72bdd7c7
2020-11-28 16:00:35.685 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@16aed49f
2020-11-28 16:00:35.686 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@16aed49f
2020-11-28 16:00:35.686 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@16aed49f
2020-11-28 16:00:35.687 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@670f2466
2020-11-28 16:00:35.687 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@670f2466
2020-11-28 16:00:35.687 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@670f2466
2020-11-28 16:00:35.688 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6690b9fa
2020-11-28 16:00:35.689 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6690b9fa
2020-11-28 16:00:35.689 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6690b9fa
2020-11-28 16:00:35.690 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@65fe2691
2020-11-28 16:00:35.690 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@65fe2691
2020-11-28 16:00:35.691 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b5dce5c
2020-11-28 16:00:35.691 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b5dce5c
2020-11-28 16:00:35.692 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3b2553d9
2020-11-28 16:00:35.692 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b2553d9
2020-11-28 16:00:35.693 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@309cedb6
2020-11-28 16:00:35.693 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7b3cde6f
2020-11-28 16:00:35.694 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2ffb3aec
2020-11-28 16:00:35.694 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2ffb3aec
2020-11-28 16:00:35.694 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5f36c8e3
2020-11-28 16:00:35.695 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5f36c8e3
2020-11-28 16:00:35.695 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6ef60295
2020-11-28 16:00:35.696 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6ef60295
2020-11-28 16:00:35.696 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dd8ff1d
2020-11-28 16:00:35.697 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dd8ff1d
2020-11-28 16:00:35.697 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4ceff87d
2020-11-28 16:00:35.697 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4ceff87d
2020-11-28 16:00:35.698 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3a6045c6
2020-11-28 16:00:35.698 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3a6045c6
2020-11-28 16:00:35.699 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d97e06c
2020-11-28 16:00:35.699 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7d97e06c
2020-11-28 16:00:35.700 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3eb292cd
2020-11-28 16:00:35.700 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3eb292cd
2020-11-28 16:00:35.701 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6807a356
2020-11-28 16:00:35.702 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6807a356
2020-11-28 16:00:35.703 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7327a447
2020-11-28 16:00:35.703 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7327a447
2020-11-28 16:00:35.704 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@d70f722
2020-11-28 16:00:35.704 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d70f722
2020-11-28 16:00:35.705 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@650c405c
2020-11-28 16:00:35.705 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@650c405c
2020-11-28 16:00:35.705 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@650c405c
2020-11-28 16:00:35.706 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fff46bf
2020-11-28 16:00:35.707 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@43c57161
2020-11-28 16:00:35.707 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43c57161
2020-11-28 16:00:35.708 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43c57161
2020-11-28 16:00:35.708 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54e12f4c
2020-11-28 16:00:35.709 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6ca30b8a
2020-11-28 16:00:35.709 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5b88b8e
2020-11-28 16:00:35.710 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5b88b8e
2020-11-28 16:00:35.710 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@315105f
2020-11-28 16:00:35.710 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@315105f
2020-11-28 16:00:35.711 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@14924f41
2020-11-28 16:00:35.711 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@14924f41
2020-11-28 16:00:35.712 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@d16be4f
2020-11-28 16:00:35.712 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d16be4f
2020-11-28 16:00:35.713 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6d67f5eb
2020-11-28 16:00:35.714 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6d67f5eb
2020-11-28 16:00:35.714 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@558b4942
2020-11-28 16:00:35.715 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3b55dd15
2020-11-28 16:00:35.715 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3b55dd15
2020-11-28 16:00:35.715 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3b55dd15
2020-11-28 16:00:35.716 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f10f633
2020-11-28 16:00:35.716 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f10f633
2020-11-28 16:00:35.716 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f10f633
2020-11-28 16:00:35.717 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@502a4156
2020-11-28 16:00:35.718 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@92d1782
2020-11-28 16:00:35.718 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@798dad3d
2020-11-28 16:00:35.718 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@798dad3d
2020-11-28 16:00:35.718 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@798dad3d
2020-11-28 16:00:35.719 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ceee4b6
2020-11-28 16:00:35.719 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ceee4b6
2020-11-28 16:00:35.719 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ceee4b6
2020-11-28 16:00:35.720 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@e784320
2020-11-28 16:00:35.720 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4cad79bc
2020-11-28 16:00:35.721 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@50eb4a2c
2020-11-28 16:00:35.721 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@50eb4a2c
2020-11-28 16:00:35.722 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7885776b
2020-11-28 16:00:35.722 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2ead6ba4
2020-11-28 16:00:35.723 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ead6ba4
2020-11-28 16:00:35.724 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6af90849
2020-11-28 16:00:35.724 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6af90849
2020-11-28 16:00:35.724 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4a44cfc0
2020-11-28 16:00:35.724 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65cf4d6d
2020-11-28 16:00:35.726 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@32eae6f2
2020-11-28 16:00:35.731 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@796f632b
2020-11-28 16:00:35.732 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@796f632b
2020-11-28 16:00:35.732 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b47731f
2020-11-28 16:00:35.732 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@233db8e9
2020-11-28 16:00:35.733 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@40c2ce52
2020-11-28 16:00:35.733 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18a19e
2020-11-28 16:00:35.733 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60a7e509
2020-11-28 16:00:35.733 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e13f304
2020-11-28 16:00:35.734 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@787508ca
2020-11-28 16:00:35.734 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d24420b
2020-11-28 16:00:36.035  INFO [org.hibernate.dialect.Dialect.<init>(Dialect.java:170)] [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL95Dialect
2020-11-28 16:00:36.118 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@a0c5be
2020-11-28 16:00:36.118 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@a0c5be
2020-11-28 16:00:36.118 DEBUG [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:160)] [main] BasicTypeRegistry - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6d67f5eb
2020-11-28 16:00:36.123 DEBUG [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:152)] [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b560eb0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@9e02f84]
2020-11-28 16:00:36.227 DEBUG [org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry.lambda$getDescriptor$0(JavaTypeDescriptorRegistry.java:40)] [main] JavaTypeDescriptorRegistry - Could not find matching scoped JavaTypeDescriptor for requested Java class [dev.lavertu.banshee.utils.JpaGameConverter]; falling back to static registry
2020-11-28 16:00:36.229 DEBUG [org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry.lambda$getDescriptor$0(JavaTypeDescriptorRegistry.java:40)] [main] JavaTypeDescriptorRegistry - Could not find matching scoped JavaTypeDescriptor for requested Java class [dev.lavertu.banshee.game.GameBoard]; falling back to static registry
2020-11-28 16:00:36.229 DEBUG [org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry.lambda$getDescriptor$0(JavaTypeDescriptorRegistry.java:127)] [main] JavaTypeDescriptorRegistry - Could not find matching JavaTypeDescriptor for requested Java class [dev.lavertu.banshee.game.GameBoard]; using fallback.  This means Hibernate does not know how to perform certain basic operations in relation to this Java type.
2020-11-28 16:00:36.231  WARN [org.hibernate.type.descriptor.java.JavaTypeDescriptorRegistry.checkEqualsAndHashCode(JavaTypeDescriptorRegistry.java:144)] [main] JavaTypeDescriptorRegistry - HHH000481: Encountered Java type [class dev.lavertu.banshee.game.GameBoard] for which we could not locate a JavaTypeDescriptor and which does not appear to implement equals and/or hashCode.  This can lead to significant performance problems when performing equality/dirty checking involving this Java type.  Consider registering a custom JavaTypeDescriptor or at least implementing equals/hashCode.
2020-11-28 16:00:36.231 DEBUG [org.hibernate.type.descriptor.java.spi.JavaTypeDescriptorRegistry.lambda$getDescriptor$0(JavaTypeDescriptorRegistry.java:40)] [main] JavaTypeDescriptorRegistry - Could not find matching scoped JavaTypeDescriptor for requested Java class [java.lang.String]; falling back to static registry
2020-11-28 16:00:36.233 DEBUG [org.hibernate.type.descriptor.converter.AttributeConverterTypeAdapter.<init>(AttributeConverterTypeAdapter.java:57)] [main] AttributeConverterTypeAdapter - Created AttributeConverterTypeAdapter -> converted::dev.lavertu.banshee.utils.JpaGameConverter
2020-11-28 16:00:36.376 DEBUG [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:157)] [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b560eb0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@734fbae3]
2020-11-28 16:00:36.727  INFO [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-28 16:00:36.734 TRACE [org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated(TypeConfiguration.java:205)] [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@734fbae3] for TypeConfiguration
2020-11-28 16:00:36.736  INFO [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:434)] [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-28 16:00:36.903  WARN [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration.openEntityManagerInViewInterceptor(JpaBaseConfiguration.java:221)] [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-11-28 16:00:37.012  INFO [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:181)] [main] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-28 16:00:37.101  INFO [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping.<init>(WelcomePageHandlerMapping.java:54)] [main] WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-11-28 16:00:37.268  INFO [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:220)] [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-28 16:00:37.269  INFO [org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent(DeferredRepositoryInitializationListener.java:51)] [main] DeferredRepositoryInitializationListener - Triggering deferred initialization of Spring Data repositories…
2020-11-28 16:00:37.271  INFO [org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent(DeferredRepositoryInitializationListener.java:55)] [main] DeferredRepositoryInitializationListener - Spring Data repositories initialized!
2020-11-28 16:00:37.284  INFO [org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:61)] [main] Main - Started Main in 3.495 seconds (JVM running for 3.904)
2020-11-28 16:00:39.945  INFO [org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525)] [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-11-28 16:00:39.946  INFO [org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547)] [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 1 ms
2020-11-28 16:01:11.694  INFO [org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:218)] [SpringContextShutdownHook] ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-11-28 16:01:11.696  INFO [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:648)] [SpringContextShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-11-28 16:01:11.696 TRACE [org.hibernate.type.spi.TypeConfiguration.sessionFactoryClosed(TypeConfiguration.java:211)] [SpringContextShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@734fbae3] for TypeConfiguration
2020-11-28 16:01:11.697 DEBUG [org.hibernate.type.spi.TypeConfiguration$Scope.unsetSessionFactory(TypeConfiguration.java:350)] [SpringContextShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@22b7ace9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@734fbae3]
